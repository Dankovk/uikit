import { StrictMode, Suspense, useEffect, useRef, useState } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { createRoot } from 'react-dom/client'
import { Container, CustomContainer, Root, Text } from '@react-three/uikit'
import { DefaultColors, colors } from '@/defaults.js'
import { Button } from '@/button.js'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/card.js'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/tabs.js'
import { CalendarDateRangePicker } from './date-range-picker.js'
import { MainNav } from './main-nav.js'
import { Overview } from './overview.js'
import { RecentSales } from './recent-sales.js'
import { TeamSwitcher } from './team-switcher.js'
import { UserNav } from './user-nav.js'
import { Activity, CreditCard, DollarSign, Users } from '@react-three/uikit-lucide'
import { ContactShadows, Environment, MeshTransmissionMaterial, useGLTF, useTexture } from '@react-three/drei'
import { Group, MathUtils, RepeatWrapping } from 'three'
import { DialogAnchor } from '@/dialog.js'
//@ts-ignore
import { EffectComposer, DepthOfField, Vignette } from '@react-three/postprocessing'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)

function App() {
  const [open, setOpen] = useState(false)
  return (
    <Canvas
      camera={{ position: [0, 0, -18], fov: 35 }}
      style={{ height: '100dvh', touchAction: 'none' }}
      gl={{ localClippingEnabled: true }}
    >
      <pointLight position={[8, 0, -10]} intensity={1500} color={'#d25578'} />
      <pointLight position={[-10, 10, -10]} intensity={1500} color={'blue'} />
      <Suspense fallback={null}>
        <group rotation={[0, Math.PI, 0]} position-y={-0.5}>
          <Model open={open} setOpen={setOpen} hinge={-0.425} />
        </group>
        <Environment background blur={0.2} preset="city" />
      </Suspense>
      <ContactShadows position={[0, -4.5, 0]} opacity={0.4} scale={20} blur={1.75} far={4.5} />

      <EffectComposer>
        <DepthOfField focusDistance={open ? 0.016 : 0.018} focalLength={0.005} bokehScale={6} />
        <Vignette eskil={false} offset={0.1} darkness={1.1} />
      </EffectComposer>
    </Canvas>
  )
}

function Model({ hinge, open, setOpen, ...props }: any) {
  const group = useRef<Group>(null)
  const normalMap = useTexture('/scratches.jpg')
  useEffect(() => {
    normalMap.repeat.setScalar(2)
    normalMap.wrapS = RepeatWrapping
    normalMap.wrapT = RepeatWrapping
    normalMap.needsUpdate = true
  }, [normalMap])
  // Load model
  const { nodes, materials } = useGLTF('/mac-draco.glb')
  // Take care of cursor state on hover
  // Make it float in the air when it's opened
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    if (group.current == null) {
      return
    }
    group.current.rotation.x = MathUtils.lerp(group.current.rotation.x, Math.cos(t / 10) / 10 + 0.25, 0.1)
    group.current.rotation.y = MathUtils.lerp(group.current.rotation.y, Math.sin(t / 10) / 4, 0.1)
    group.current.rotation.z = MathUtils.lerp(group.current.rotation.z, Math.sin(t / 10) / 10, 0.1)
    group.current.position.y = MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t)) / 3, 0.1)
  })
  // The view was auto-generated by: https://github.com/pmndrs/gltfjsx
  // Events and spring animations were added afterwards
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation-x={hinge} position={[0, -0.04, 0.41]}>
        <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh material={materials.aluminium} geometry={nodes['Cube008'].geometry} />
          <mesh material={materials['matte.001']} geometry={nodes['Cube008_1'].geometry} />
          <group rotation-x={-Math.PI / 2}>
            <Root backgroundColor={0xffffff} sizeX={8.34} sizeY={5.58} pixelSize={0.01}>
              <CustomContainer transformTranslateZ={-1} positionType="absolute" inset={0}>
                <meshBasicMaterial colorWrite={false} />
              </CustomContainer>
              <CustomContainer zIndexOffset={50} transformTranslateZ={1} positionType="absolute" inset={0}>
                <MeshTransmissionMaterial
                  normalMap={normalMap}
                  normalMapType={1}
                  clearcoatNormalMap={normalMap}
                  distortionScale={0}
                  temporalDistortion={0}
                  transmission={1}
                  metalness={0.6}
                  roughness={0.1}
                  clearcoat={0.1}
                  opacity={0.4}
                  transparent
                  envMapIntensity={0.5}
                  color={0xffffff}
                />
              </CustomContainer>
              <DefaultColors>
                <DialogAnchor>
                  <Container width="100%" height="100%" overflow="scroll">
                    <DashboardPage open={open} setOpen={setOpen} />
                  </Container>
                </DialogAnchor>
              </DefaultColors>
            </Root>
          </group>
        </group>
      </group>
      <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} />
      <group position={[0, -0.1, 3.39]}>
        <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />
        <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />
      </group>
      <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} />
    </group>
  )
}

export function DashboardPage({ open, setOpen }: { open: boolean; setOpen: (open: boolean) => void }) {
  return (
    <Container flexDirection="column">
      <Container borderBottom={1}>
        <Container height={64} alignItems="center" flexDirection="row" paddingX={16}>
          <TeamSwitcher />
          <MainNav marginX={24} />
          <Container marginLeft="auto" flexDirection="row" alignItems="center" gap={16}>
            <UserNav open={open} setOpen={setOpen} />
          </Container>
        </Container>
      </Container>
      <Container flexGrow={1} gap={16} padding={32} paddingTop={24}>
        <Container flexDirection="row" justifyContent="space-between" gap={8}>
          <Text fontSize={30} lineHeight={1}>
            Dashboard
          </Text>
          <Container flexDirection="row" gap={8} alignItems="center">
            <CalendarDateRangePicker />
            <Button>
              <Text>Download</Text>
            </Button>
          </Container>
        </Container>
        <Tabs defaultValue="overview" gap={16}>
          <TabsList alignSelf="flex-start">
            <TabsTrigger value="overview">
              <Text>Overview</Text>
            </TabsTrigger>
            <TabsTrigger value="analytics" disabled>
              <Text>Analytics</Text>
            </TabsTrigger>
            <TabsTrigger value="reports" disabled>
              <Text>Reports</Text>
            </TabsTrigger>
            <TabsTrigger value="notifications" disabled>
              <Text>Notifications</Text>
            </TabsTrigger>
          </TabsList>
          <TabsContent value="overview" gap={16}>
            <Container gap={16} lg={{ flexDirection: 'row' }}>
              <Container flexGrow={1} gap={16} flexDirection="row">
                <Card flexBasis={0} flexGrow={1}>
                  <CardHeader flexDirection="row" alignItems="center" justifyContent="space-between" paddingBottom={8}>
                    <CardTitle>
                      <Text fontSize={14} lineHeight={1.43}>
                        Total Revenue
                      </Text>
                    </CardTitle>
                    <DollarSign width={16} height={16} color={colors.mutedForeground} />
                  </CardHeader>
                  <CardContent>
                    <Text fontSize={24} lineHeight={1.3333}>
                      $45,231.89
                    </Text>
                    <Text fontSize={12} lineHeight={1.3333} color={colors.mutedForeground}>
                      +20.1% from last month
                    </Text>
                  </CardContent>
                </Card>
                <Card flexBasis={0} flexGrow={1}>
                  <CardHeader
                    flexDirection="row"
                    alignItems="center"
                    justifyContent="space-between"
                    paddingBottom={8}
                    gap={0}
                  >
                    <CardTitle>
                      <Text fontSize={14} lineHeight={1.43}>
                        Subscriptions
                      </Text>
                    </CardTitle>
                    <Users height={16} width={16} color={colors.mutedForeground} />
                  </CardHeader>
                  <CardContent>
                    <Text fontSize={24} lineHeight={1.3333}>
                      +2350
                    </Text>
                    <Text fontSize={12} lineHeight={1.3333} color={colors.mutedForeground}>
                      +180.1% from last month
                    </Text>
                  </CardContent>
                </Card>
              </Container>
              <Container flexGrow={1} gap={16} flexDirection="row">
                <Card flexBasis={0} flexGrow={1}>
                  <CardHeader
                    flexDirection="row"
                    alignItems="center"
                    justifyContent="space-between"
                    paddingBottom={2}
                    gap={0}
                  >
                    <CardTitle>
                      <Text fontSize={14} lineHeight={1.43}>
                        Sales
                      </Text>
                    </CardTitle>
                    <CreditCard width={16} height={16} color={colors.mutedForeground} />
                  </CardHeader>
                  <CardContent>
                    <Text fontSize={24} lineHeight={1.3333}>
                      +12,234
                    </Text>
                    <Text fontSize={12} lineHeight={1.3333} color={colors.mutedForeground}>
                      +19% from last month
                    </Text>
                  </CardContent>
                </Card>
                <Card flexBasis={0} flexGrow={1}>
                  <CardHeader
                    flexDirection="row"
                    alignItems="center"
                    justifyContent="space-between"
                    paddingBottom={2}
                    gap={0}
                  >
                    <CardTitle>
                      <Text fontSize={14} lineHeight={1.43}>
                        Active Now
                      </Text>
                    </CardTitle>
                    <Activity width={16} height={16} color={colors.mutedForeground} />
                  </CardHeader>
                  <CardContent>
                    <Text fontSize={24} lineHeight={1.3333}>
                      +573
                    </Text>
                    <Text fontSize={12} lineHeight={1.3333} color={colors.mutedForeground}>
                      +201 since last hour
                    </Text>
                  </CardContent>
                </Card>
              </Container>
            </Container>
            <Container lg={{ flexDirection: 'row' }} flexDirection="column" gap={16}>
              <Card lg={{ flexGrow: 4 }}>
                <CardHeader>
                  <CardTitle>
                    <Text>Overview</Text>
                  </CardTitle>
                </CardHeader>
                <CardContent paddingLeft={8}>
                  <Overview />
                </CardContent>
              </Card>
              <Card lg={{ flexGrow: 3 }}>
                <CardHeader>
                  <CardTitle>
                    <Text>Recent Sales</Text>
                  </CardTitle>
                  <CardDescription>
                    <Text>You made 265 sales this month.</Text>
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <RecentSales />
                </CardContent>
              </Card>
            </Container>
          </TabsContent>
        </Tabs>
      </Container>
    </Container>
  )
}
